import type { Metadata } from "next";
import "./global.css";
import AuthInitializer from "@/libs/common/AuthInitializer";
import fetchInstance from "@/libs/common/fetchInstance";
import HeaderContainer from "@/containers/common/HeaderContainer";
import localFont from "next/font/local";

const pretendard = localFont({
  src: "../fonts/PretendardVariable.woff2",
  display: "swap",
  weight: "45 920",
  variable: "--font-pretendard",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const initFetchAuthentcation = async () => {
  let initUser = null;
  try {
    const res = await fetchInstance("/auth/refresh", {
      method: "POST",
    });
    if (res.ok) {
      const { data } = await res.json();
      if (data) {
        initUser = data.payload;
        return initUser;
      }
    }
  } catch (error) {
    console.error(error);
  }
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let initUser = await initFetchAuthentcation();

  return (
    <html lang="ko">
      <head>
        <title>Whhiskyrail</title>
      </head>
      <body className={`${pretendard.variable} font-pretendard`}>
        <AuthInitializer initUser={initUser} />
        <HeaderContainer initUser={initUser} />
        {children}
      </body>
    </html>
  );
}
